<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oracle.s202350104.BoardMapper">

	<select id="boardCount" resultType="int">
		select count(*)
		from board a, users b
		where a.user_id = b.id
		and a.small_code = #{small_code}
		and a.is_deleted = 0
		and a.comment_indent = 0
		<if test="keyword != null and keyword != ''">
		and a.title like '%' || #{keyword} || '%'
		</if>	
		<if test="user_id != null and user_id != ''">
		and a.user_id = #{user_id}
		</if>		
	</select>
	
	<select id="adminboardCount" resultType="int">
		select count(*)
		from board a, users b
		where a.user_id = b.id
		and a.small_code = #{small_code}
		and a.is_deleted = 0
		<if test="user_id != null and user_id != ''">
		and a.user_id = #{user_id}
		</if>			
	</select>
	
	<select id="reviewBoardCount" parameterType="Board" resultType="int">
		select count(*)
		from board a 
		join users b
		on a.user_id = b.id
		join contents c
		on a.content_id = c.id
		where c.big_code = #{commBigCode}
		and c.small_code = #{commSmallCode}
		<if test="is_deleted != null and is_deleted != ''">
		and a.is_deleted = #{is_deleted}
		</if>
	</select>

	<select id="readCountUp" resultType="int">
		update board 
		set read_count = read_count + 1 
		where id = #{boardId}
	</select>
	
	<select id="noticAllList" resultType="Board">
		select *
		from (
		    select rownum rn, c.*
		    from (
		        select a.id, a.title, a.content, b.name, a.created_at, a.updated_at, 
		        	   a.read_count, a.big_code, a.small_code, a.status, a.is_deleted
		        from board a, users b
		        where a.user_id = b.id
		        and a.small_code = 1
				<if test="is_deleted != null and is_deleted != ''">
				and a.is_deleted = #{is_deleted}
				</if>
				<if test="status != null and status != ''">
				and a.status = #{status}
				</if>	
				<if test="keyword != null and keyword != ''">
				and a.title like '%' || #{keyword} || '%'
				</if>								        
		    ) c
		)
		where rn between #{start} and #{end}
	</select>

	<select id="magazinAllList" resultType="Board">
		select *
		from (
		    select rownum rn, c.*
		    from (
		        select a.id, a.title, a.content, b.name, a.created_at, a.updated_at, 
		       		   a.read_count, a.big_code, a.small_code, a.status, a.is_deleted
		        from board a, users b
		        where a.user_id = b.id
		        and a.small_code = 2
				<if test="is_deleted != null and is_deleted != ''">
				and a.is_deleted = #{is_deleted}
				</if>
				<if test="status != null and status != ''">
				and a.status = #{status}
				</if>	
				<if test="keyword != null and keyword != ''">
				and a.title like '%' || #{keyword} || '%'
				</if>											        
		    ) c
		)
		where rn between #{start} and #{end}
	</select>

	<select id="freeAllList" resultType="Board">
		select *
		from (
		    select rownum rn, c.*
		    from (
		        select a.id, a.title, b.name, a.created_at, a.updated_at, a.read_count, 
		        	   a.big_code, a.small_code, a.user_id, a.comment_indent, a.status, a.is_deleted
		       
		        from board a, users b
		        where a.user_id = b.id
		        and a.small_code = 3
				and a.comment_indent = 0	
				<if test="is_deleted != null and is_deleted != ''">					
				and a.is_deleted = 0
				</if>
				<if test="status != null and status != ''">
				and a.status = #{status}
				</if>
				<if test="keyword != null and keyword != ''">
				and a.title like '%' || #{keyword} || '%'
				</if>
		    ) c
		)
		where rn between #{start} and #{end}		
	</select>
	
	<select id="photoAllList" resultType="Board">
		select *
		from (
		    select rownum rn, c.*
		    from (
		        select a.id, a.title, b.name, a.created_at, a.read_count, a.big_code,
		         	   a.small_code, a.file_name, a.file_path, a.status, a.is_deleted,
		         	   a.updated_at
		        from board a, users b
		        where a.user_id = b.id
		        and a.small_code = 4
				<if test="is_deleted != null and is_deleted != ''">
				and a.is_deleted = #{is_deleted}
				</if>	
				<if test="status != null and status != ''">
				and a.status = #{status}
				</if>
				<if test="keyword != null and keyword != ''">
				and a.title like '%' || #{keyword} || '%'
				</if>										        
		    ) c
		)
		where rn between #{start} and #{end}
	</select>
	
	<select id="eventAllList" resultType="Board">
		select *
		from (
		    select rownum rn, c.*
		    from (
		        select a.id, a.title, b.name, a.created_at, a.read_count, a.big_code,
		         	   a.small_code, a.file_name, a.file_path, a.status, a.is_deleted,
		         	   a.updated_at
		        from board a, users b
		        where a.user_id = b.id
		        and a.small_code = 5
				<if test="is_deleted != null and is_deleted != ''">
				and a.is_deleted = #{is_deleted}
				</if>
				<if test="status != null and status != ''">
				and a.status = #{status}
				</if>
				<if test="keyword != null and keyword != ''">
				and a.title like '%' || #{keyword} || '%'
				</if>											        
		    ) c
		)
		where rn between #{start} and #{end}
	</select>
	
	<select id="reviewAllList" resultType="Board">
		select *
		from (
				select rownum rn, e.*
				from (
		               select a.id, c.title, a.content_id, a.content, b.name, a.score,
		               		  a.created_at, a.updated_at, a.big_code, a.small_code,
		               		  a.status, a.is_deleted
		               from 
		                    board a
		               join 
		                    users b
		               on 
		                   	a.user_id = b.id
		               join 
		                    contents c
		               on 
		                   	a.content_id = c.id
		               where c.id = #{content_id}
					   <if test="is_deleted != null and is_deleted != ''">
					   and a.is_deleted = #{is_deleted}
					   </if>
					   <if test="status != null and status != ''">
					   and a.status = #{status}
					   </if>
					   <if test="keyword != null and keyword != ''">
					   and a.title like '%' || #{keyword} || '%'
					   </if>					   					   	
		        ) e
		)
		where rn between #{start} and #{end}
	</select>
	
	<select id="reviewAllList2" resultType="Board">
		select *
		from (
		    select rownum rn, c.*
		    from (
		        select a.id, a.user_id, a.content, b.name, b.nickname, a.created_at, a.read_count, 
		       		   a.big_code, a.small_code, a.status, a.is_deleted
		        from board a, users b
		        where a.user_id = b.id
		        and a.small_code = 6
				<if test="is_deleted != null and is_deleted != ''">
				and a.is_deleted = #{is_deleted}
				</if>
				<if test="status != null and status != ''">
				and a.status = #{status}
				</if>	
		        order by a.id desc
		    ) c
		)
		where rn between #{start} and #{end}
	</select>

	<select id="boardDetail" parameterType="int" resultType="Board">
		select substr(a.file_name, 38) file_name_custom, a.id, a.user_id, a.title,  
			   a.content, b.name, a.created_at, a.read_count, a.file_name, 
			   a.file_path, a.big_code, a.small_code, a.comment_group_id,
			   a.comment_step, a.comment_indent, a.status
		from board a, users b
		where a.user_id = b.id
		and a.id = #{boardId}
	</select>
	
	<update id="boardUpdate" parameterType="Board">
		update board
		set
			title = #{title},
			content = #{content},
			file_name = #{file_name},
			file_path = #{file_path},
			file_size = #{file_size},
			updated_at = sysdate
		where id = #{id}
	</update>
	
	<update id="boardUpdate2" parameterType="Board">
		update board
		set
			title = #{title},
			content = #{content},
			updated_at = sysdate
		where id = #{id}
	</update>
		
	<delete id="boardDelete" parameterType="int">
		delete from board where id = #{boardId}
	</delete>	
	
	<insert id="boardInsert" parameterType="Board">
		<selectKey keyProperty="id" resultType="integer" order="BEFORE">
			select board_seq_generator.nextval from dual
		</selectKey>
		insert into board (id, user_id, big_code, small_code, title, content, status, 
						   read_count, file_name, file_size, file_path, comment_group_id, 
						   comment_step, comment_indent, created_at, is_deleted) 
		values(#{id}, #{user_id}, #{big_code}, #{small_code}, 
			   #{title}, #{content}, 1, 0, #{file_name}, #{file_size}, #{file_path}, 
			   #{id}, 0, 0, sysdate, 0)		
	</insert>
	
	<insert id="reviewBoardInsert" parameterType="Board">
		<selectKey keyProperty="id" resultType="integer" order="BEFORE">
			select board_seq_generator.nextval from dual
		</selectKey>
		insert into board (id, content_id, user_id, big_code, small_code, 
						   title, content, status, score, created_at, is_deleted) 
		values(#{id}, #{content_id}, #{user_id}, #{big_code},
			   #{small_code}, #{title}, #{content}, 1, #{score}, sysdate, 0)		
	</insert>
	
	<select id="boardImageRead" parameterType="int" resultType="Board">
		select *
		from board
		where id = #{id}
	</select>
	
	<insert id="commentInsert" parameterType="Board">
		<selectKey keyProperty="id" resultType="integer" order="BEFORE">
			select board_seq_generator.nextval from dual
		</selectKey>
		insert into board (id, user_id, big_code, small_code, 
						   title, content, status, read_count, comment_group_id, 
						   comment_step, comment_indent, created_at, is_deleted) 
		values(#{id}, #{user_id}, #{big_code}, #{small_code}, 
			   #{title}, #{content}, 1, 0, #{comment_group_id}, #{comment_step}, #{comment_indent},
			   sysdate, 0)		
	</insert>
	
	<update id="commentInsertTest">
		update board 
		set comment_step = comment_step + 1 
		where comment_group_id = #{comment_group_id} 
		and comment_step > #{comment_step}
	
	</update>
	
	<select id="commentDetail" parameterType="int" resultType="Board">
		select a.id, b.name, b.nickname, a.title, a.content, a.comment_group_id, a.comment_step, a.comment_indent
		from board a, users b
		where a.user_id = b.id
		and a.comment_group_id = #{id}
		and a.comment_indent > 0
		order by a.comment_step
	</select>
	
	<select id="getBoardOneList" resultType="Board">
		select *
		from (
		    select rownum rn, c.*
		    from (
		        select a.id, a.title, b.name, a.created_at, a.read_count, 
		        	   a.big_code, a.small_code, a.user_id, a.comment_indent,
		        	   a.updated_at
		        from board a, users b
		        where a.user_id = b.id
		        and a.small_code = 3
		        and a.is_deleted = 0
		        and a.comment_indent = 0
		        and a.user_id = #{user_id}
		    ) c
		)
		where rn between #{start} and #{end}		
	</select>	
	
	<select id="getReviewOneList" resultType="Board">
		select *
		from (
		    select rownum rn, c.*
		    from (
		        select a.id, a.title, a.content, b.name, a.created_at, a.read_count, 
		        	   a.big_code, a.small_code, a.user_id, a.comment_indent,
		        	   a.updated_at
		        from board a, users b
		        where a.user_id = b.id
		        and a.small_code = 6
		        and a.is_deleted = 0
		        and a.user_id = #{user_id}
		    ) c
		)
		where rn between #{start} and #{end}		
	</select>	
	
	<update id="boardDeleteNew" parameterType="int">
		update board 
		set is_deleted = 1,
			status = 0
		where id = #{id} 
	</update>
	
	<update id="boardRecycle" parameterType="int">
		update board 
		set is_deleted = 0,
			status = 1
		where id = #{id} 
	</update>
	
	<select id="test" parameterType="Board" resultType="double">
		select round(avg(a.score), 1) as score
		from board a
		join users b on a.user_id = b.id
		join contents c on a.content_id = c.id
		where c.id = #{content_id} and a.is_deleted = 0	
	</select>
	
</mapper>